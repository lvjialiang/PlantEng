(function (a) { a.imgAreaSelect = { onKeyPress: null }; a.imgAreaSelect.init = function (G, Z) { var E = a(G), q, t = a("<div />"), w = a("<div />"), am = a("<div />"), al = a("<div />"), af, f = a("<div />"), ab = a("<div />"), K = a("<div />"), m = a("<div />"), at = a([]), ax, g = [], L, ak, aa = Math, au, J, ay, l, O, b = 0, ah = "absolute", T, aj, ai, X = 1, U = 1, aw = 10, p = [], Q = 0, ac = 1, I, aD, v, u, k, h, D, B, A, ae, F, aA = { x1: 0, y1: 0, x2: 0, y2: 0, width: 0, height: 0 }; var W = f.add(ab).add(K).add(m); function S(d) { return d + au.left - O.left } function R(d) { return d + au.top - O.top } function ap(d) { return d - au.left + O.left } function ao(d) { return d - au.top + O.top } function s(d) { return d.pageX - O.left } function r(d) { return d.pageY - O.top } function av() { return { x1: aa.round(aA.x1 * X), y1: aa.round(aA.y1 * U), x2: aa.round(aA.x2 * X), y2: aa.round(aA.y2 * U), width: aa.round(aA.x2 * X) - aa.round(aA.x1 * X), height: aa.round(aA.y2 * U) - aa.round(aA.y1 * U)} } function ag() { T = E; while (T.length && !T.is("body")) { if (!isNaN(T.css("z-index")) && T.css("z-index") > b) { b = T.css("z-index") } if (T.css("position") == "fixed") { ah = "fixed" } T = T.parent() } if (!isNaN(Z.zIndex)) { b = Z.zIndex } } function j() { au = { left: aa.round(E.offset().left), top: aa.round(E.offset().top) }; J = E.width(); ay = E.height(); if (a().jquery == "1.3.2" && a.browser.safari && ah == "fixed") { au.top += aa.max(document.documentElement.scrollTop, a("body").scrollTop()); au.left += aa.max(document.documentElement.scrollLeft, a("body").scrollLeft()) } O = a.inArray(l.css("position"), ["absolute", "relative"]) != -1 ? { left: aa.round(l.offset().left) - l.scrollLeft(), top: aa.round(l.offset().top) - l.scrollTop()} : ah == "fixed" ? { left: a(document).scrollLeft(), top: a(document).scrollTop()} : { left: 0, top: 0 }; L = S(0); ak = R(0) } function C(d) { if (!ae) { return } t.css({ left: S(aA.x1) + "px", top: R(aA.y1) + "px", width: aA.width + "px", height: aA.height + "px" }); w.add(am).add(al).css({ left: "0px", top: "0px", width: aa.max(aA.width - Z.borderWidth * 2, 0) + "px", height: aa.max(aA.height - Z.borderWidth * 2, 0) + "px" }); am.css({ borderStyle: "solid", borderColor: Z.borderColor1 }); al.css({ borderStyle: "dashed", borderColor: Z.borderColor2 }); am.add(al).css({ opacity: Z.borderOpacity }); f.css({ left: L + "px", top: ak + "px", width: aA.x1 + "px", height: ay + "px" }); ab.css({ left: L + aA.x1 + "px", top: ak + "px", width: aA.width + "px", height: aA.y1 + "px" }); K.css({ left: L + aA.x2 + "px", top: ak + "px", width: J - aA.x2 + "px", height: ay + "px" }); m.css({ left: L + aA.x1 + "px", top: ak + aA.y2 + "px", width: aA.width + "px", height: ay - aA.y2 + "px" }); if (g.length) { g[1].css({ left: aA.width - ax + "px" }); g[2].css({ left: aA.width - ax + "px", top: aA.height - ax + "px" }); g[3].css({ top: aA.height - ax + "px" }); if (g.length == 8) { g[4].css({ left: (aA.width - ax) / 2 + "px" }); g[5].css({ left: aA.width - ax + "px", top: (aA.height - ax) / 2 + "px" }); g[6].css({ left: (aA.width - ax) / 2 + "px", top: aA.height - ax + "px" }); g[7].css({ top: (aA.height - ax) / 2 + "px" }) } } if (d !== false) { if (a.imgAreaSelect.keyPress != aq) { a(document).unbind(a.imgAreaSelect.keyPress, a.imgAreaSelect.onKeyPress) } if (Z.keys) { a(document).bind(a.imgAreaSelect.keyPress, a.imgAreaSelect.onKeyPress = aq) } } if (a.browser.msie && Z.borderWidth == 1 && Z.borderOpacity < 1) { am.add(al).css("margin", "0"); setTimeout(function () { am.add(al).css("margin", "auto") }, 0) } } function z(d) { if (!A) { j(); A = true; t.one("mouseout", function () { A = false }) } D = ap(s(d)) - aA.x1; B = ao(r(d)) - aA.y1; p = []; if (Z.resizable) { if (B <= aw) { p[Q] = "n" } else { if (B >= aA.height - aw) { p[Q] = "s" } } if (D <= aw) { p[ac] = "w" } else { if (D >= aA.width - aw) { p[ac] = "e" } } } t.css("cursor", p.length ? p.join("") + "-resize" : Z.movable ? "move" : ""); if (af) { af.toggle() } } function c(d) { p = []; a("body").css("cursor", ""); if (Z.autoHide || aA.width * aA.height == 0) { t.add(W).hide() } Z.onSelectEnd(G, av()); a(document).unbind("mousemove", ad); t.mousemove(z) } function ar(d) { if (d.which != 1) { return false } j(); if (Z.resizable && p.length > 0) { a("body").css("cursor", p.join("") + "-resize"); v = S(aA[p[ac] == "w" ? "x2" : "x1"]); k = R(aA[p[Q] == "n" ? "y2" : "y1"]); a(document).mousemove(ad).one("mouseup", c); t.unbind("mousemove", z) } else { if (Z.movable) { aj = L + aA.x1 - s(d); ai = ak + aA.y1 - r(d); t.unbind("mousemove", z); a(document).mousemove(Y).one("mouseup", function () { Z.onSelectEnd(G, av()); a(document).unbind("mousemove", Y); t.mousemove(z) }) } else { E.mousedown(d) } } return false } function aB() { u = aa.max(L, aa.min(L + J, v + aa.abs(h - k) * aD * (u < v ? -1 : 1))); h = aa.round(aa.max(ak, aa.min(ak + ay, k + aa.abs(u - v) / aD * (h < k ? -1 : 1)))); u = aa.round(u) } function an() { h = aa.max(ak, aa.min(ak + ay, k + aa.abs(u - v) / aD * (h < k ? -1 : 1))); u = aa.round(aa.max(L, aa.min(L + J, v + aa.abs(h - k) * aD * (u < v ? -1 : 1)))); h = aa.round(h) } function az() { if (Z.minWidth && aa.abs(u - v) < Z.minWidth) { u = v - Z.minWidth * (u < v ? 1 : -1); if (u < L) { v = L + Z.minWidth } else { if (u > L + J) { v = L + J - Z.minWidth } } } if (Z.minHeight && aa.abs(h - k) < Z.minHeight) { h = k - Z.minHeight * (h < k ? 1 : -1); if (h < ak) { k = ak + Z.minHeight } else { if (h > ak + ay) { k = ak + ay - Z.minHeight } } } u = aa.max(L, aa.min(u, L + J)); h = aa.max(ak, aa.min(h, ak + ay)); if (aD) { if (aa.abs(u - v) / aD > aa.abs(h - k)) { an() } else { aB() } } if (Z.maxWidth && aa.abs(u - v) > Z.maxWidth) { u = v - Z.maxWidth * (u < v ? 1 : -1); if (aD) { an() } } if (Z.maxHeight && aa.abs(h - k) > Z.maxHeight) { h = k - Z.maxHeight * (h < k ? 1 : -1); if (aD) { aB() } } aA = { x1: ap(aa.min(v, u)), x2: ap(aa.max(v, u)), y1: ao(aa.min(k, h)), y2: ao(aa.max(k, h)), width: aa.abs(u - v), height: aa.abs(h - k) }; C(); Z.onSelectChange(G, av()) } function ad(d) { u = !p.length || p[ac] || aD ? s(d) : S(aA.x2); h = !p.length || p[Q] || aD ? r(d) : R(aA.y2); az(); return false } function N(d, i) { u = (v = d) + aA.width; h = (k = i) + aA.height; aA = a.extend(aA, { x1: ap(v), y1: ao(k), x2: ap(u), y2: ao(h) }); C(); Z.onSelectChange(G, av()) } function Y(d) { v = aa.max(L, aa.min(aj + s(d), L + J - aA.width)); k = aa.max(ak, aa.min(ai + r(d), ak + ay - aA.height)); N(v, k); d.preventDefault(); return false } function o(d) { j(); u = v; h = k; az(); p = []; t.add(W.is(":visible") ? null : W).show(); ae = true; a(document).unbind("mouseup", P).mousemove(ad).one("mouseup", c); t.unbind("mousemove", z); Z.onSelectStart(G, av()) } function P() { a(document).unbind("mousemove", o); t.add(W).hide(); aA = { x1: 0, y1: 0, x2: 0, y2: 0, width: 0, height: 0 }; Z.onSelectChange(G, aA); Z.onSelectEnd(G, aA) } function aC(d) { if (d.which != 1) { return false } j(); aj = v = s(d); ai = k = r(d); a(document).one("mousemove", o).one("mouseup", P); return false } function e() { j(); C(false); v = S(aA.x1); k = R(aA.y1); u = S(aA.x2); h = R(aA.y2) } function n() { q = true; if (Z.show) { ae = true; j(); C(); t.add(W).show() } t.add(W).css({ visibility: "" }) } var aq = function (H) { var i = Z.keys, M, y, x = H.keyCode || H.which; M = !isNaN(i.alt) && (H.altKey || H.originalEvent.altKey) ? i.alt : !isNaN(i.ctrl) && H.ctrlKey ? i.ctrl : !isNaN(i.shift) && H.shiftKey ? i.shift : !isNaN(i.arrows) ? i.arrows : 10; if (i.arrows == "resize" || (i.shift == "resize" && H.shiftKey) || (i.ctrl == "resize" && H.ctrlKey) || (i.alt == "resize" && (H.altKey || H.originalEvent.altKey))) { switch (x) { case 37: M = -M; case 39: y = aa.max(v, u); v = aa.min(v, u); u = aa.max(y + M, v); if (aD) { an() } break; case 38: M = -M; case 40: y = aa.max(k, h); k = aa.min(k, h); h = aa.max(y + M, k); if (aD) { aB() } break; default: return } az() } else { v = aa.min(v, u); k = aa.min(k, h); switch (x) { case 37: N(aa.max(v - M, L), k); break; case 38: N(v, aa.max(k - M, ak)); break; case 39: N(v + aa.min(M, J - ap(u)), k); break; case 40: N(v, k + aa.min(M, ay - ao(h))); break; default: return } } return false }; this.setOptions = function (d) { if (d.parent) { (l = a(d.parent)).append(t.add(W)) } j(); ag(); if (d.x1 != null) { aA = { x1: d.x1, y1: d.y1, x2: d.x2, y2: d.y2 }; d.show = !d.hide; v = S(aA.x1); k = R(aA.y1); u = S(aA.x2); h = R(aA.y2); aA.width = u - v; aA.height = h - k } if (d.handles != null) { at.remove(); at = a(g = []); F = d.handles ? d.handles == "corners" ? 4 : 8 : 0; while (F--) { at = at.add(g[F] = a("<div />")) } ax = 4 + Z.borderWidth; at.css({ position: "absolute", borderWidth: Z.borderWidth + "px", borderStyle: "solid", borderColor: Z.borderColor1, opacity: Z.borderOpacity, backgroundColor: Z.borderColor2, width: ax + "px", height: ax + "px", fontSize: "0px", zIndex: b > 0 ? b + 1 : "1" }).addClass(Z.classPrefix + "-handle"); ax += Z.borderWidth * 2 } C(); Z = a.extend(Z, d); Z.onSelectBegin(G, aA); if (Z.imageWidth || Z.imageHeight) { X = (parseInt(Z.imageWidth) || J) / J; U = (parseInt(Z.imageHeight) || ay) / ay } if (d.keys) { Z.keys = a.extend({ shift: 1, ctrl: "resize" }, d.keys === true ? {} : d.keys) } W.addClass(Z.classPrefix + "-outer"); w.addClass(Z.classPrefix + "-selection"); am.addClass(Z.classPrefix + "-border1"); al.addClass(Z.classPrefix + "-border2"); t.add(w).add(am).add(al).css({ borderWidth: Z.borderWidth + "px" }); w.css({ backgroundColor: Z.selectionColor, opacity: Z.selectionOpacity }); am.css({ borderStyle: "solid", borderColor: Z.borderColor1 }); al.css({ borderStyle: "dashed", borderColor: Z.borderColor2 }); am.add(al).css({ opacity: Z.borderOpacity }); W.css({ opacity: Z.outerOpacity, backgroundColor: Z.outerColor }); t.append(w.add(am).add(al).add(at).add(af)); if (d.hide) { t.add(W).hide() } else { if (d.show && q) { ae = true; C(); t.add(W).show() } } aD = Z.aspectRatio && (I = Z.aspectRatio.split(/:/)) ? I[0] / I[1] : null; if (aD) { if (Z.minWidth) { Z.minHeight = parseInt(Z.minWidth / aD) } else { if (Z.minHeight) { Z.minWidth = parseInt(Z.minHeight * aD) } } } if (Z.disable || Z.enable === false) { t.unbind("mousemove", z).unbind("mousedown", ar); E.add(W).unbind("mousedown", aC); a(window).unbind("resize", e); E.add(E.parents()).unbind("scroll", e) } else { if (Z.enable || Z.disable === false) { if (Z.resizable || Z.movable) { t.mousemove(z).mousedown(ar) } if (!Z.persistent) { E.add(W).mousedown(aC) } a(window).resize(e); E.add(E.parents()).scroll(e) } } Z.enable = Z.disable = undefined }; if (a.browser.msie) { E.attr("unselectable", "on") } a.imgAreaSelect.keyPress = a.browser.msie || a.browser.safari ? "keydown" : "keypress"; if (a.browser.opera) { (af = a('<div style="width: 100%; height: 100%; position: absolute;" />')).css({ zIndex: b > 0 ? b + 2 : "2" }) } this.setOptions(Z = a.extend({ borderColor1: "#000", borderColor2: "#fff", borderWidth: 1, borderOpacity: 0.5, classPrefix: "imgareaselect", movable: true, resizable: true, selectionColor: "#fff", selectionOpacity: 0, outerColor: "#000", outerOpacity: 0.4, parent: "body", onSelectStart: function () { }, onSelectChange: function () { }, onSelectEnd: function () { }, onSelectBegin: function () { } }, Z)); t.add(W).css({ visibility: "hidden", position: ah, overflow: "hidden", zIndex: b > 0 ? b : "0" }); w.css({ borderStyle: "solid" }); t.css({ position: ah, zIndex: b > 0 ? b + 2 : "2" }); w.add(am).add(al).css({ position: "absolute" }); G.complete || G.readyState == "complete" || !E.is("img") ? n() : E.one("load", n) }; a.fn.imgAreaSelect = function (b) { b = b || {}; this.each(function () { if (a(this).data("imgAreaSelect")) { a(this).data("imgAreaSelect").setOptions(b) } else { if (b.enable === undefined && b.disable === undefined) { b.enable = true } a(this).data("imgAreaSelect", new a.imgAreaSelect.init(this, b)) } }); return this } })(jQuery);